오전수업 -
mybatis : 독립된 프레임워크
컨트롤러를 사람별로 나누기? 괜찮다고합니다

어노테이션을 컨트롤러로 설정해도 매핑할때 다르게 입력하면 상관이 없다.
서비스는 인터페이스를 다르게 서비스잡고 사용할때 각 서비스를 컨트롤러에서 불러들여서 사용하는식으로 설정한다.
다오 서비스랑 동일하게 사용한다.

EmpDept : Emp와 Dept를 조인할 클래스
mapper에 namespace에 EmpDeptMapper부분은 유일하면 된다.

Datasource -> javax.activation으로 선택
MimeUtility -> javax.mail.internet

starttls.enable : true로 하면 정보를 암호화해서 전송.
application.yml -> password 입력할때 가능한 특수문자 : !, @, 

오후수업 -
TLS : 전송계층보안 -> start tls .enable -> 보안을 걸고 작업을 할것인가? 같은 느낌

Vo : 거의 ReadOnly같은 개념으로 사용됨
Procedure 호출할때 xml에서도 statementType="CALLABLE"로 잡아야한다.

프로시저, 함수 : 매개변수를 받아서 여러 작업을 수행하여 값을 반환할 수 있음.

차이

프로시저
- 쿼리들의 집합, 작업을 정리한 절차
- 단독으로 작업을 수행할때 사용
- 매개변수를 입력,출력,입출력 모든 방식으로 받을수 있음
- 반환되는 값이 없어도 가능
- 쿼리문 내에서 사용하기에 SELECT, WHERE문 등에서는 사용이 불가능
- 클라이언트한테 값 받고 서버에서 작업하고 클라이언트로 넘겨줌
- 더 빠름

함수
- 여러 작업을 하기위해 도와주는 기능
- 로직을 도와주는 역할
- 매개변수를 입력방식으로만 받을 수 있음
- 반환되는 값이 무조건 있어야함
- 모든 쿼리문에서 사용이 가능
- 클라이언트한테 값 받고 서버에서 필요한 값을 가져와서 클라이언트에서 작업하고 넘겨줌
- 더 느림

call by value : 값만 옮김. 객체중에서 단일 값만 있는 것이 전달될때는 이방식이다.
call by reference : 주소값을 넘김. 객체가 전달될때는 이방식이다.